// Browser Supports
@mixin ie-support{
    /* IE Support */
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      @content;
    }
  }  
  @mixin edge-support{
    /* Microsoft Edge Support */
    @supports (-ms-ime-align:auto) {
      @content;
    }
  }
  @mixin firefox-support{
    /* Mozilla Firefox Support */
    @-moz-document url-prefix() {
      @content;
    }
  }
  
  @mixin safari-support{
    
    @media not all and (min-resolution:.001dpcm) {  
      /* Safari Support */
        @content; 
    }
  }
  @mixin chrome-support{
    @media screen and (-webkit-min-device-pixel-ratio:0) and (min-resolution:.001dpcm) {
      @content;
    }
  }
  
  @mixin clip-support{
    @media screen and (-webkit-min-device-pixel-ratio:0) and (min-resolution:.001dpcm) {
      @content;
    }
    // @-moz-document url-prefix() {
    //   @content;
    // }
  }
  @mixin no-clip-support{
    @media not all and (min-resolution:.001dpcm) {  
      /* Safari Support */
        @content; 
    }
    /* Microsoft Edge Support */
    @supports (-ms-ime-align:auto) {
      @content;
    }
    /* IE Support */
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      @content;
    }
    @-moz-document url-prefix() {
      /* Firefox */
      @content;
    }
  }
  
   
  @mixin narrower-screen(){
    @media (max-height: 725px) and (min-width: 1024px) {
      @content;
    }
  }
  
  //Media Queries
  @mixin media-desktop-up{
    @media (min-width: 1024px){
      @content;
    }
  }
  @mixin media-tablet-up{
    @media (min-width: 769px){
      @content;
    }
  }
  
  
  @mixin media-laptop{
    @media (max-width: 990px){
      @content;
    }
  }
  
  @mixin media-true-mobile(){
      @media (max-width: 768px){
          @content; 
      }
  }
  @mixin media-boxed(){
      @media (max-width: $boxed-width){
          @content; 
      }
  }
  @mixin media-mobile(){
      @media (max-width: 760px){
          @content; 
      }
  }
  
  @mixin media-overlay(){
    @media (max-width: 1210px){
      @content;
    }
  }
  
  @mixin media-ios-only(){
    @supports (-webkit-overflow-scrolling: touch) {
    /* CSS specific to iOS devices */ 
    @content;
  }
  }
  
  @mixin generic-hover($color: '#00000057'){ 
    &{
      transition: 0.3s ease-in-out;
    }
    &:hover{
      transform: translateY(-3px);
      box-shadow: 0px 5px 25px -5px #{$color};
      border-radius: 5px;
      @content;
    }
  }
  
  @mixin media-mobile-xs(){
      @media (max-width: 387px){
          @content; 
      }
  }
  
  
  @mixin ie-support(){
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      /* IE10+ CSS styles go here */
      @content;
    }
    @supports (-ms-ime-align:auto) {
      /* IE Edge 12+ CSS styles go here */ 
      @content;
    }
  }
  
  
  @mixin iphone-678(){
    @media only screen 
    and (max-device-width : 375px) 
    and (max-device-width : 667px)   { 
       /* iphone 6,7,8 */
      @content;
    }
  }
  @mixin iphone-678-plus(){
    @media only screen 
  and (min-device-width : 414px) 
  and (max-device-width : 736px) { @content;}
  }
  
  @mixin iphone-x(){
    @media only screen 
    and (max-device-width : 375px) 
    and (max-device-width : 812px)
    and (-webkit-device-pixel-ratio : 3) { 
      /* iphone X+ */
      @content;
    }
  }
  @mixin iphone-xr-plus(){
    @media only screen 
      and (min-device-width: 414px) 
      and (min-device-height: 896px) 
      and (-webkit-device-pixel-ratio: 2) 
      and (orientation: portrait) { 
      /* iphone XR */
      @content;
    }
    @media only screen 
      and (min-device-width: 414px) 
      and (min-device-height: 896px) 
      and (-webkit-device-pixel-ratio: 3) 
      and (orientation: portrait) { 
      /* iphone XR */
      @content;
    }
  }  
  
  //Type
  @mixin font-primary($weight: normal, $style: normal){
      font-family: 'El Messiri';
      // Weight checkpoint
      $w: normal; 
      @if $weight == 'bold' or $weight == 700 {
          $w: bold;
      }
      @else if $weight == 'semibold' or $weight == 600 {
          $w: 600;
      } 
      @else if $weight == 'medium' or $weight == 500 {
          $w: 500;
      }
      @if $weight == 'regular' or $weight == 'normal' or $weight == 100{
          $w: normal;
      } 
      font-weight: $w; 
      font-style: $style;
  }
  
  @mixin font-secondary($weight: normal, $style: normal, $type: normal){
      //Type checkpoint
      @if $type == 'normal' {
          font-family: 'Gotham';
      }
      @else if $type == 'book'{
          font-family: 'Gotham Book';
      }   
      //Weight checkpoint
      $w: normal; 
      @if $weight == 'bold' or $weight == 700 {
          $w: bold;
      }
      @else if $weight == 'semibold' or $weight == 600 {
          $w: 600;
      } 
      @else if $weight == 'medium' or $weight == 500 {
          $w: 500;
      }
      @else if $weight == 'light' or $weight == 300 {
          $w: 300;
      }
      @if $weight == 'regular' or $weight == 'normal' or $weight == 100{
          $w: normal;
      } 
      font-weight: $w; 
      font-style: $style;
  }
  @function convert($value, $currentUnit, $convertUnit){
      @if $currentUnit == px{
    
        @if $convertUnit == ems{
          @return $value / 16 + 0em;
        }
        @else if $convertUnit == percent{
          @return percentage($value / 16);
        }
    
      }@else if $currentUnit == ems{
    
        @if $convertUnit == px{
          @return $value * 16 + 0px;
        }
        @else if $convertUnit == percent{
          @return percentage($value);
        }
    
      }@else if $currentUnit == percent{
    
        @if $convertUnit == px{
          @return $value * 16 / 100 + 0px;
        }
        @else if $convertUnit == ems{
          @return $value / 100 + 0em;
        }
    
      }@else if $currentUnit == pts{
    
        @if $convertUnit == px{
          @return $value * 1.3333 +0px;
        }
        @else if $convertUnit == ems{
          @return $value / 12 + 0em;
        }
        @else if $convertUnit == percent{
          @return percentage($value / 12)
        }
      }
  }
  
  
  
  